; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: %riscv32_bakewell_purecap_llc -verify-machineinstrs < %s \
; RUN:   | FileCheck --check-prefix=RV32PURECAP %s

define dso_local i32 @foo(i8 addrspace(200)* noundef %cap) addrspace(200) {
; RV32PURECAP-LABEL: foo:
; RV32PURECAP:       # %bb.0: # %entry
; RV32PURECAP-NEXT:    caddi csp, csp, -16
; RV32PURECAP-NEXT:    .cfi_def_cfa_offset 16
; RV32PURECAP-NEXT:    mv a1, a0
; RV32PURECAP-NEXT:    sc ca0, 8(csp)
; RV32PURECAP-NEXT:    mv a0, a1
; RV32PURECAP-NEXT:    caddi csp, csp, 16
; RV32PURECAP-NEXT:    ret
entry:
  %cap.addr = alloca i8 addrspace(200)*, align 8, addrspace(200)
  store i8 addrspace(200)* %cap, i8 addrspace(200)* addrspace(200)* %cap.addr, align 8
  %0 = load i8 addrspace(200)*, i8 addrspace(200)* addrspace(200)* %cap.addr, align 8
  %1 = call i32 @llvm.cheri.cap.address.get.i32(i8 addrspace(200)* %0)
  ret i32 %1
}

declare i32 @llvm.cheri.cap.address.get.i32(i8 addrspace(200)*) addrspace(200)
