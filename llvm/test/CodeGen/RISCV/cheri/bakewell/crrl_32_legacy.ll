; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: %riscv32_bakewell_hybrid_llc -verify-machineinstrs < %s \
; RUN:   | FileCheck --check-prefix=RV32LEGACY %s
define dso_local i32 @cram(i32 noundef %len) {
; RV32LEGACY-LABEL: cram:
; RV32LEGACY:       # %bb.0: # %entry
; RV32LEGACY-NEXT:    addi sp, sp, -16
; RV32LEGACY-NEXT:    .cfi_def_cfa_offset 16
; RV32LEGACY-NEXT:    cram a1, a0
; RV32LEGACY-NEXT:    not a2, a1
; RV32LEGACY-NEXT:    add a2, a0, a2
; RV32LEGACY-NEXT:    and a1, a2, a1
; RV32LEGACY-NEXT:    sw a0, 12(sp)
; RV32LEGACY-NEXT:    mv a0, a1
; RV32LEGACY-NEXT:    addi sp, sp, 16
; RV32LEGACY-NEXT:    ret
entry:
  %len.addr = alloca i32, align 4
  store i32 %len, i32* %len.addr, align 4
  %0 = load i32, i32* %len.addr, align 4
  %1 = call i32 @llvm.cheri.round.representable.length.i32(i32 %0)
  ret i32 %1
}

declare i32 @llvm.cheri.round.representable.length.i32(i32)
