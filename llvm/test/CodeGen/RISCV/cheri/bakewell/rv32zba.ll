; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=riscv32 -mattr=+m,+zcheripurecap,+cap-mode -target-abi=il32pc64 -verify-machineinstrs < %s \
; RUN:   | FileCheck %s -check-prefixes=ZCHERIPURECAP
; RUN: llc -mtriple=riscv32 -mattr=+m,+zcheripurecap,+zba,+cap-mode -target-abi=il32pc64 -verify-machineinstrs < %s \
; RUN:   | FileCheck %s -check-prefixes=ZCHERIPURECAPZBA
; RUN: llc -mtriple=riscv32 -mattr=+m,+zba -verify-machineinstrs < %s \
; RUN:   | FileCheck %s -check-prefixes=RISCVZBA

define signext i16 @sh1add(i64 %0, ptr addrspace(200) %1) {
; ZCHERIPURECAP-LABEL: sh1add:
; ZCHERIPURECAP:       # %bb.0:
; ZCHERIPURECAP-NEXT:    slli a0, a0, 1
; ZCHERIPURECAP-NEXT:    cadd ca0, ca2, a0
; ZCHERIPURECAP-NEXT:    lh a0, 0(ca0)
; ZCHERIPURECAP-NEXT:    ret
;
; ZCHERIPURECAPZBA-LABEL: sh1add:
; ZCHERIPURECAPZBA:       # %bb.0:
; ZCHERIPURECAPZBA-NEXT:    sh1add ca0, a0, ca2
; ZCHERIPURECAPZBA-NEXT:    lh a0, 0(ca0)
; ZCHERIPURECAPZBA-NEXT:    ret
;
; RISCVZBA-LABEL: sh1add:
; RISCVZBA:       # %bb.0:
; RISCVZBA-NEXT:    sh1add a0, a0, a2
; RISCVZBA-NEXT:    lh a0, 0(a0)
; RISCVZBA-NEXT:    ret
  %3 = getelementptr inbounds i16, ptr addrspace(200) %1, i64 %0
  %4 = load i16, ptr addrspace(200) %3
  ret i16 %4
}

define signext i32 @sh1add_mult(i32 %0, i32 %1){
; ZCHERIPURECAP-LABEL: sh1add_mult:
; ZCHERIPURECAP:       # %bb.0:
; ZCHERIPURECAP-NEXT:    slli a0, a0, 1
; ZCHERIPURECAP-NEXT:    add a0, a0, a1
; ZCHERIPURECAP-NEXT:    ret
;
; ZCHERIPURECAPZBA-LABEL: sh1add_mult:
; ZCHERIPURECAPZBA:       # %bb.0:
; ZCHERIPURECAPZBA-NEXT:    # kill: def $x11 killed $x11 def $c11
; ZCHERIPURECAPZBA-NEXT:    sh1add ca0, a0, ca1
; ZCHERIPURECAPZBA-NEXT:    # kill: def $x10 killed $x10 killed $c10
; ZCHERIPURECAPZBA-NEXT:    ret
;
; RISCVZBA-LABEL: sh1add_mult:
; RISCVZBA:       # %bb.0:
; RISCVZBA-NEXT:    sh1add a0, a0, a1
; RISCVZBA-NEXT:    ret
  %a = shl i32 %0, 1
  %b = add i32 %a, %1
  ret i32 %b
}

define i32 @sh2add(i64 %0, ptr addrspace(200) %1){
; ZCHERIPURECAP-LABEL: sh2add:
; ZCHERIPURECAP:       # %bb.0:
; ZCHERIPURECAP-NEXT:    slli a0, a0, 2
; ZCHERIPURECAP-NEXT:    cadd ca0, ca2, a0
; ZCHERIPURECAP-NEXT:    lw a0, 0(ca0)
; ZCHERIPURECAP-NEXT:    ret
;
; ZCHERIPURECAPZBA-LABEL: sh2add:
; ZCHERIPURECAPZBA:       # %bb.0:
; ZCHERIPURECAPZBA-NEXT:    sh2add ca0, a0, ca2
; ZCHERIPURECAPZBA-NEXT:    lw a0, 0(ca0)
; ZCHERIPURECAPZBA-NEXT:    ret
;
; RISCVZBA-LABEL: sh2add:
; RISCVZBA:       # %bb.0:
; RISCVZBA-NEXT:    sh2add a0, a0, a2
; RISCVZBA-NEXT:    lw a0, 0(a0)
; RISCVZBA-NEXT:    ret
    %3 = getelementptr inbounds i32, ptr addrspace(200) %1, i64 %0
    %4 = load i32, ptr addrspace(200) %3
    ret i32 %4
}

define signext i32 @sh2add_mult(i32 %0, i32 %1){
; ZCHERIPURECAP-LABEL: sh2add_mult:
; ZCHERIPURECAP:       # %bb.0:
; ZCHERIPURECAP-NEXT:    slli a0, a0, 2
; ZCHERIPURECAP-NEXT:    add a0, a0, a1
; ZCHERIPURECAP-NEXT:    ret
;
; ZCHERIPURECAPZBA-LABEL: sh2add_mult:
; ZCHERIPURECAPZBA:       # %bb.0:
; ZCHERIPURECAPZBA-NEXT:    # kill: def $x11 killed $x11 def $c11
; ZCHERIPURECAPZBA-NEXT:    sh2add ca0, a0, ca1
; ZCHERIPURECAPZBA-NEXT:    # kill: def $x10 killed $x10 killed $c10
; ZCHERIPURECAPZBA-NEXT:    ret
;
; RISCVZBA-LABEL: sh2add_mult:
; RISCVZBA:       # %bb.0:
; RISCVZBA-NEXT:    sh2add a0, a0, a1
; RISCVZBA-NEXT:    ret
  %a = shl i32 %0, 2
  %b = add i32 %a, %1
  ret i32 %b
}

define i64 @sh3add(i64 %0, ptr addrspace(200) %1){
; ZCHERIPURECAP-LABEL: sh3add:
; ZCHERIPURECAP:       # %bb.0:
; ZCHERIPURECAP-NEXT:    slli a0, a0, 3
; ZCHERIPURECAP-NEXT:    cadd ca1, ca2, a0
; ZCHERIPURECAP-NEXT:    lw a0, 0(ca1)
; ZCHERIPURECAP-NEXT:    lw a1, 4(ca1)
; ZCHERIPURECAP-NEXT:    ret
;
; ZCHERIPURECAPZBA-LABEL: sh3add:
; ZCHERIPURECAPZBA:       # %bb.0:
; ZCHERIPURECAPZBA-NEXT:    sh3add ca1, a0, ca2
; ZCHERIPURECAPZBA-NEXT:    lw a0, 0(ca1)
; ZCHERIPURECAPZBA-NEXT:    lw a1, 4(ca1)
; ZCHERIPURECAPZBA-NEXT:    ret
;
; RISCVZBA-LABEL: sh3add:
; RISCVZBA:       # %bb.0:
; RISCVZBA-NEXT:    sh3add a1, a0, a2
; RISCVZBA-NEXT:    lw a0, 0(a1)
; RISCVZBA-NEXT:    lw a1, 4(a1)
; RISCVZBA-NEXT:    ret
    %3 = getelementptr inbounds i64, ptr addrspace(200) %1, i64 %0
    %4 = load i64, ptr addrspace(200) %3
    ret i64 %4
}

define signext i32 @sh3add_mult(i32 %0, i32 %1){
; ZCHERIPURECAP-LABEL: sh3add_mult:
; ZCHERIPURECAP:       # %bb.0:
; ZCHERIPURECAP-NEXT:    slli a0, a0, 3
; ZCHERIPURECAP-NEXT:    add a0, a0, a1
; ZCHERIPURECAP-NEXT:    ret
;
; ZCHERIPURECAPZBA-LABEL: sh3add_mult:
; ZCHERIPURECAPZBA:       # %bb.0:
; ZCHERIPURECAPZBA-NEXT:    # kill: def $x11 killed $x11 def $c11
; ZCHERIPURECAPZBA-NEXT:    sh3add ca0, a0, ca1
; ZCHERIPURECAPZBA-NEXT:    # kill: def $x10 killed $x10 killed $c10
; ZCHERIPURECAPZBA-NEXT:    ret
;
; RISCVZBA-LABEL: sh3add_mult:
; RISCVZBA:       # %bb.0:
; RISCVZBA-NEXT:    sh3add a0, a0, a1
; RISCVZBA-NEXT:    ret
  %a = shl i32 %0, 3
  %b = add i32 %a, %1
  ret i32 %b
}

define i32 @addmul6(i32 %a, i32 %b) {
; ZCHERIPURECAP-LABEL: addmul6:
; ZCHERIPURECAP:       # %bb.0:
; ZCHERIPURECAP-NEXT:    li a2, 6
; ZCHERIPURECAP-NEXT:    mul a0, a0, a2
; ZCHERIPURECAP-NEXT:    add a0, a0, a1
; ZCHERIPURECAP-NEXT:    ret
;
; ZCHERIPURECAPZBA-LABEL: addmul6:
; ZCHERIPURECAPZBA:       # %bb.0:
; ZCHERIPURECAPZBA-NEXT:    # kill: def $x11 killed $x11 def $c11
; ZCHERIPURECAPZBA-NEXT:    sh1add ca0, a0, ca1
; ZCHERIPURECAPZBA-NEXT:    sh1add ca0, a0, ca1
; ZCHERIPURECAPZBA-NEXT:    # kill: def $x10 killed $x10 killed $c10
; ZCHERIPURECAPZBA-NEXT:    ret
;
; RISCVZBA-LABEL: addmul6:
; RISCVZBA:       # %bb.0:
; RISCVZBA-NEXT:    sh1add a0, a0, a0
; RISCVZBA-NEXT:    sh1add a0, a0, a1
; RISCVZBA-NEXT:    ret
  %c = mul i32 %a, 6
  %d = add i32 %c, %b
  ret i32 %d
}

define i32 @addmul6_ptr(i32 %a, ptr addrspace(200) %b){
; ZCHERIPURECAP-LABEL: addmul6_ptr:
; ZCHERIPURECAP:       # %bb.0:
; ZCHERIPURECAP-NEXT:    li a2, 6
; ZCHERIPURECAP-NEXT:    mul a0, a0, a2
; ZCHERIPURECAP-NEXT:    cadd ca0, ca1, a0
; ZCHERIPURECAP-NEXT:    lw a0, 0(ca0)
; ZCHERIPURECAP-NEXT:    ret
;
; ZCHERIPURECAPZBA-LABEL: addmul6_ptr:
; ZCHERIPURECAPZBA:       # %bb.0:
; ZCHERIPURECAPZBA-NEXT:    # kill: def $x10 killed $x10 def $c10
; ZCHERIPURECAPZBA-NEXT:    sh1add ca0, a0, ca0
; ZCHERIPURECAPZBA-NEXT:    sh1add ca0, a0, ca1
; ZCHERIPURECAPZBA-NEXT:    lw a0, 0(ca0)
; ZCHERIPURECAPZBA-NEXT:    ret
;
; RISCVZBA-LABEL: addmul6_ptr:
; RISCVZBA:       # %bb.0:
; RISCVZBA-NEXT:    sh1add a0, a0, a0
; RISCVZBA-NEXT:    sh1add a0, a0, a1
; RISCVZBA-NEXT:    lw a0, 0(a0)
; RISCVZBA-NEXT:    ret
  %c = mul i32 %a, 6
  %d = getelementptr inbounds i8, ptr addrspace(200) %b, i32 %c
  %e = load i32, ptr addrspace(200) %d
  ret i32 %e
}

define i32 @addmul10(i32 %a, i32 %b) {
; ZCHERIPURECAP-LABEL: addmul10:
; ZCHERIPURECAP:       # %bb.0:
; ZCHERIPURECAP-NEXT:    li a2, 10
; ZCHERIPURECAP-NEXT:    mul a0, a0, a2
; ZCHERIPURECAP-NEXT:    add a0, a0, a1
; ZCHERIPURECAP-NEXT:    ret
;
; ZCHERIPURECAPZBA-LABEL: addmul10:
; ZCHERIPURECAPZBA:       # %bb.0:
; ZCHERIPURECAPZBA-NEXT:    # kill: def $x11 killed $x11 def $c11
; ZCHERIPURECAPZBA-NEXT:    sh2add ca0, a0, ca1
; ZCHERIPURECAPZBA-NEXT:    sh1add ca0, a0, ca1
; ZCHERIPURECAPZBA-NEXT:    # kill: def $x10 killed $x10 killed $c10
; ZCHERIPURECAPZBA-NEXT:    ret
;
; RISCVZBA-LABEL: addmul10:
; RISCVZBA:       # %bb.0:
; RISCVZBA-NEXT:    sh2add a0, a0, a0
; RISCVZBA-NEXT:    sh1add a0, a0, a1
; RISCVZBA-NEXT:    ret
  %c = mul i32 %a, 10
  %d = add i32 %c, %b
  ret i32 %d
}

define i32 @addmul10_ptr(i32 %a, ptr addrspace(200) %b){
; ZCHERIPURECAP-LABEL: addmul10_ptr:
; ZCHERIPURECAP:       # %bb.0:
; ZCHERIPURECAP-NEXT:    li a2, 10
; ZCHERIPURECAP-NEXT:    mul a0, a0, a2
; ZCHERIPURECAP-NEXT:    cadd ca0, ca1, a0
; ZCHERIPURECAP-NEXT:    lw a0, 0(ca0)
; ZCHERIPURECAP-NEXT:    ret
;
; ZCHERIPURECAPZBA-LABEL: addmul10_ptr:
; ZCHERIPURECAPZBA:       # %bb.0:
; ZCHERIPURECAPZBA-NEXT:    # kill: def $x10 killed $x10 def $c10
; ZCHERIPURECAPZBA-NEXT:    sh2add ca0, a0, ca0
; ZCHERIPURECAPZBA-NEXT:    sh1add ca0, a0, ca1
; ZCHERIPURECAPZBA-NEXT:    lw a0, 0(ca0)
; ZCHERIPURECAPZBA-NEXT:    ret
;
; RISCVZBA-LABEL: addmul10_ptr:
; RISCVZBA:       # %bb.0:
; RISCVZBA-NEXT:    sh2add a0, a0, a0
; RISCVZBA-NEXT:    sh1add a0, a0, a1
; RISCVZBA-NEXT:    lw a0, 0(a0)
; RISCVZBA-NEXT:    ret
  %c = mul i32 %a, 10
  %d = getelementptr inbounds i8, ptr addrspace(200) %b, i32 %c
  %e = load i32, ptr addrspace(200) %d
  ret i32 %e
}

define i32 @addmul12(i32 %a, i32 %b) {
; ZCHERIPURECAP-LABEL: addmul12:
; ZCHERIPURECAP:       # %bb.0:
; ZCHERIPURECAP-NEXT:    li a2, 12
; ZCHERIPURECAP-NEXT:    mul a0, a0, a2
; ZCHERIPURECAP-NEXT:    add a0, a0, a1
; ZCHERIPURECAP-NEXT:    ret
;
; ZCHERIPURECAPZBA-LABEL: addmul12:
; ZCHERIPURECAPZBA:       # %bb.0:
; ZCHERIPURECAPZBA-NEXT:    # kill: def $x11 killed $x11 def $c11
; ZCHERIPURECAPZBA-NEXT:    sh1add ca0, a0, ca1
; ZCHERIPURECAPZBA-NEXT:    sh2add ca0, a0, ca1
; ZCHERIPURECAPZBA-NEXT:    # kill: def $x10 killed $x10 killed $c10
; ZCHERIPURECAPZBA-NEXT:    ret
;
; RISCVZBA-LABEL: addmul12:
; RISCVZBA:       # %bb.0:
; RISCVZBA-NEXT:    sh1add a0, a0, a0
; RISCVZBA-NEXT:    sh2add a0, a0, a1
; RISCVZBA-NEXT:    ret
  %c = mul i32 %a, 12
  %d = add i32 %c, %b
  ret i32 %d
}

define i32 @addmul12_ptr(i32 %a, ptr addrspace(200) %b){
; ZCHERIPURECAP-LABEL: addmul12_ptr:
; ZCHERIPURECAP:       # %bb.0:
; ZCHERIPURECAP-NEXT:    li a2, 12
; ZCHERIPURECAP-NEXT:    mul a0, a0, a2
; ZCHERIPURECAP-NEXT:    cadd ca0, ca1, a0
; ZCHERIPURECAP-NEXT:    lw a0, 0(ca0)
; ZCHERIPURECAP-NEXT:    ret
;
; ZCHERIPURECAPZBA-LABEL: addmul12_ptr:
; ZCHERIPURECAPZBA:       # %bb.0:
; ZCHERIPURECAPZBA-NEXT:    # kill: def $x10 killed $x10 def $c10
; ZCHERIPURECAPZBA-NEXT:    sh1add ca0, a0, ca0
; ZCHERIPURECAPZBA-NEXT:    sh2add ca0, a0, ca1
; ZCHERIPURECAPZBA-NEXT:    lw a0, 0(ca0)
; ZCHERIPURECAPZBA-NEXT:    ret
;
; RISCVZBA-LABEL: addmul12_ptr:
; RISCVZBA:       # %bb.0:
; RISCVZBA-NEXT:    sh1add a0, a0, a0
; RISCVZBA-NEXT:    sh2add a0, a0, a1
; RISCVZBA-NEXT:    lw a0, 0(a0)
; RISCVZBA-NEXT:    ret
  %c = mul i32 %a, 12
  %d = getelementptr inbounds i8, ptr addrspace(200) %b, i32 %c
  %e = load i32, ptr addrspace(200) %d
  ret i32 %e
}

define i32 @addmul18(i32 %a, i32 %b) {
; ZCHERIPURECAP-LABEL: addmul18:
; ZCHERIPURECAP:       # %bb.0:
; ZCHERIPURECAP-NEXT:    li a2, 18
; ZCHERIPURECAP-NEXT:    mul a0, a0, a2
; ZCHERIPURECAP-NEXT:    add a0, a0, a1
; ZCHERIPURECAP-NEXT:    ret
;
; ZCHERIPURECAPZBA-LABEL: addmul18:
; ZCHERIPURECAPZBA:       # %bb.0:
; ZCHERIPURECAPZBA-NEXT:    # kill: def $x11 killed $x11 def $c11
; ZCHERIPURECAPZBA-NEXT:    sh3add ca0, a0, ca1
; ZCHERIPURECAPZBA-NEXT:    sh1add ca0, a0, ca1
; ZCHERIPURECAPZBA-NEXT:    # kill: def $x10 killed $x10 killed $c10
; ZCHERIPURECAPZBA-NEXT:    ret
;
; RISCVZBA-LABEL: addmul18:
; RISCVZBA:       # %bb.0:
; RISCVZBA-NEXT:    sh3add a0, a0, a0
; RISCVZBA-NEXT:    sh1add a0, a0, a1
; RISCVZBA-NEXT:    ret
  %c = mul i32 %a, 18
  %d = add i32 %c, %b
  ret i32 %d
}

define i32 @addmul18_ptr(i32 %a, ptr addrspace(200) %b){
; ZCHERIPURECAP-LABEL: addmul18_ptr:
; ZCHERIPURECAP:       # %bb.0:
; ZCHERIPURECAP-NEXT:    li a2, 18
; ZCHERIPURECAP-NEXT:    mul a0, a0, a2
; ZCHERIPURECAP-NEXT:    cadd ca0, ca1, a0
; ZCHERIPURECAP-NEXT:    lw a0, 0(ca0)
; ZCHERIPURECAP-NEXT:    ret
;
; ZCHERIPURECAPZBA-LABEL: addmul18_ptr:
; ZCHERIPURECAPZBA:       # %bb.0:
; ZCHERIPURECAPZBA-NEXT:    # kill: def $x10 killed $x10 def $c10
; ZCHERIPURECAPZBA-NEXT:    sh3add ca0, a0, ca0
; ZCHERIPURECAPZBA-NEXT:    sh1add ca0, a0, ca1
; ZCHERIPURECAPZBA-NEXT:    lw a0, 0(ca0)
; ZCHERIPURECAPZBA-NEXT:    ret
;
; RISCVZBA-LABEL: addmul18_ptr:
; RISCVZBA:       # %bb.0:
; RISCVZBA-NEXT:    sh3add a0, a0, a0
; RISCVZBA-NEXT:    sh1add a0, a0, a1
; RISCVZBA-NEXT:    lw a0, 0(a0)
; RISCVZBA-NEXT:    ret
  %c = mul i32 %a, 18
  %d = getelementptr inbounds i8, ptr addrspace(200) %b, i32 %c
  %e = load i32, ptr addrspace(200) %d
  ret i32 %e
}

define i32 @addmul20(i32 %a, i32 %b) {
; ZCHERIPURECAP-LABEL: addmul20:
; ZCHERIPURECAP:       # %bb.0:
; ZCHERIPURECAP-NEXT:    li a2, 20
; ZCHERIPURECAP-NEXT:    mul a0, a0, a2
; ZCHERIPURECAP-NEXT:    add a0, a0, a1
; ZCHERIPURECAP-NEXT:    ret
;
; ZCHERIPURECAPZBA-LABEL: addmul20:
; ZCHERIPURECAPZBA:       # %bb.0:
; ZCHERIPURECAPZBA-NEXT:    # kill: def $x11 killed $x11 def $c11
; ZCHERIPURECAPZBA-NEXT:    sh2add ca0, a0, ca1
; ZCHERIPURECAPZBA-NEXT:    sh2add ca0, a0, ca1
; ZCHERIPURECAPZBA-NEXT:    # kill: def $x10 killed $x10 killed $c10
; ZCHERIPURECAPZBA-NEXT:    ret
;
; RISCVZBA-LABEL: addmul20:
; RISCVZBA:       # %bb.0:
; RISCVZBA-NEXT:    sh2add a0, a0, a0
; RISCVZBA-NEXT:    sh2add a0, a0, a1
; RISCVZBA-NEXT:    ret
  %c = mul i32 %a, 20
  %d = add i32 %c, %b
  ret i32 %d
}

define i32 @addmul20_ptr(i32 %a, ptr addrspace(200) %b){
; ZCHERIPURECAP-LABEL: addmul20_ptr:
; ZCHERIPURECAP:       # %bb.0:
; ZCHERIPURECAP-NEXT:    li a2, 20
; ZCHERIPURECAP-NEXT:    mul a0, a0, a2
; ZCHERIPURECAP-NEXT:    cadd ca0, ca1, a0
; ZCHERIPURECAP-NEXT:    lw a0, 0(ca0)
; ZCHERIPURECAP-NEXT:    ret
;
; ZCHERIPURECAPZBA-LABEL: addmul20_ptr:
; ZCHERIPURECAPZBA:       # %bb.0:
; ZCHERIPURECAPZBA-NEXT:    # kill: def $x10 killed $x10 def $c10
; ZCHERIPURECAPZBA-NEXT:    sh2add ca0, a0, ca0
; ZCHERIPURECAPZBA-NEXT:    sh2add ca0, a0, ca1
; ZCHERIPURECAPZBA-NEXT:    lw a0, 0(ca0)
; ZCHERIPURECAPZBA-NEXT:    ret
;
; RISCVZBA-LABEL: addmul20_ptr:
; RISCVZBA:       # %bb.0:
; RISCVZBA-NEXT:    sh2add a0, a0, a0
; RISCVZBA-NEXT:    sh2add a0, a0, a1
; RISCVZBA-NEXT:    lw a0, 0(a0)
; RISCVZBA-NEXT:    ret
  %c = mul i32 %a, 20
  %d = getelementptr inbounds i8, ptr addrspace(200) %b, i32 %c
  %e = load i32, ptr addrspace(200) %d
  ret i32 %e
}

define i32 @addmul24(i32 %a, i32 %b) {
; ZCHERIPURECAP-LABEL: addmul24:
; ZCHERIPURECAP:       # %bb.0:
; ZCHERIPURECAP-NEXT:    li a2, 24
; ZCHERIPURECAP-NEXT:    mul a0, a0, a2
; ZCHERIPURECAP-NEXT:    add a0, a0, a1
; ZCHERIPURECAP-NEXT:    ret
;
; ZCHERIPURECAPZBA-LABEL: addmul24:
; ZCHERIPURECAPZBA:       # %bb.0:
; ZCHERIPURECAPZBA-NEXT:    # kill: def $x11 killed $x11 def $c11
; ZCHERIPURECAPZBA-NEXT:    sh1add ca0, a0, ca1
; ZCHERIPURECAPZBA-NEXT:    sh3add ca0, a0, ca1
; ZCHERIPURECAPZBA-NEXT:    # kill: def $x10 killed $x10 killed $c10
; ZCHERIPURECAPZBA-NEXT:    ret
;
; RISCVZBA-LABEL: addmul24:
; RISCVZBA:       # %bb.0:
; RISCVZBA-NEXT:    sh1add a0, a0, a0
; RISCVZBA-NEXT:    sh3add a0, a0, a1
; RISCVZBA-NEXT:    ret
  %c = mul i32 %a, 24
  %d = add i32 %c, %b
  ret i32 %d
}

define i32 @addmul24_ptr(i32 %a, ptr addrspace(200) %b){
; ZCHERIPURECAP-LABEL: addmul24_ptr:
; ZCHERIPURECAP:       # %bb.0:
; ZCHERIPURECAP-NEXT:    li a2, 24
; ZCHERIPURECAP-NEXT:    mul a0, a0, a2
; ZCHERIPURECAP-NEXT:    cadd ca0, ca1, a0
; ZCHERIPURECAP-NEXT:    lw a0, 0(ca0)
; ZCHERIPURECAP-NEXT:    ret
;
; ZCHERIPURECAPZBA-LABEL: addmul24_ptr:
; ZCHERIPURECAPZBA:       # %bb.0:
; ZCHERIPURECAPZBA-NEXT:    # kill: def $x10 killed $x10 def $c10
; ZCHERIPURECAPZBA-NEXT:    sh1add ca0, a0, ca0
; ZCHERIPURECAPZBA-NEXT:    sh3add ca0, a0, ca1
; ZCHERIPURECAPZBA-NEXT:    lw a0, 0(ca0)
; ZCHERIPURECAPZBA-NEXT:    ret
;
; RISCVZBA-LABEL: addmul24_ptr:
; RISCVZBA:       # %bb.0:
; RISCVZBA-NEXT:    sh1add a0, a0, a0
; RISCVZBA-NEXT:    sh3add a0, a0, a1
; RISCVZBA-NEXT:    lw a0, 0(a0)
; RISCVZBA-NEXT:    ret
  %c = mul i32 %a, 24
  %d = getelementptr inbounds i8, ptr addrspace(200) %b, i32 %c
  %e = load i32, ptr addrspace(200) %d
  ret i32 %e
}

define i32 @addmul36(i32 %a, i32 %b) {
; ZCHERIPURECAP-LABEL: addmul36:
; ZCHERIPURECAP:       # %bb.0:
; ZCHERIPURECAP-NEXT:    li a2, 36
; ZCHERIPURECAP-NEXT:    mul a0, a0, a2
; ZCHERIPURECAP-NEXT:    add a0, a0, a1
; ZCHERIPURECAP-NEXT:    ret
;
; ZCHERIPURECAPZBA-LABEL: addmul36:
; ZCHERIPURECAPZBA:       # %bb.0:
; ZCHERIPURECAPZBA-NEXT:    # kill: def $x11 killed $x11 def $c11
; ZCHERIPURECAPZBA-NEXT:    sh3add ca0, a0, ca1
; ZCHERIPURECAPZBA-NEXT:    sh2add ca0, a0, ca1
; ZCHERIPURECAPZBA-NEXT:    # kill: def $x10 killed $x10 killed $c10
; ZCHERIPURECAPZBA-NEXT:    ret
;
; RISCVZBA-LABEL: addmul36:
; RISCVZBA:       # %bb.0:
; RISCVZBA-NEXT:    sh3add a0, a0, a0
; RISCVZBA-NEXT:    sh2add a0, a0, a1
; RISCVZBA-NEXT:    ret
  %c = mul i32 %a, 36
  %d = add i32 %c, %b
  ret i32 %d
}

define i32 @addmul36_ptr(i32 %a, ptr addrspace(200) %b){
; ZCHERIPURECAP-LABEL: addmul36_ptr:
; ZCHERIPURECAP:       # %bb.0:
; ZCHERIPURECAP-NEXT:    li a2, 36
; ZCHERIPURECAP-NEXT:    mul a0, a0, a2
; ZCHERIPURECAP-NEXT:    cadd ca0, ca1, a0
; ZCHERIPURECAP-NEXT:    lw a0, 0(ca0)
; ZCHERIPURECAP-NEXT:    ret
;
; ZCHERIPURECAPZBA-LABEL: addmul36_ptr:
; ZCHERIPURECAPZBA:       # %bb.0:
; ZCHERIPURECAPZBA-NEXT:    # kill: def $x10 killed $x10 def $c10
; ZCHERIPURECAPZBA-NEXT:    sh3add ca0, a0, ca0
; ZCHERIPURECAPZBA-NEXT:    sh2add ca0, a0, ca1
; ZCHERIPURECAPZBA-NEXT:    lw a0, 0(ca0)
; ZCHERIPURECAPZBA-NEXT:    ret
;
; RISCVZBA-LABEL: addmul36_ptr:
; RISCVZBA:       # %bb.0:
; RISCVZBA-NEXT:    sh3add a0, a0, a0
; RISCVZBA-NEXT:    sh2add a0, a0, a1
; RISCVZBA-NEXT:    lw a0, 0(a0)
; RISCVZBA-NEXT:    ret
  %c = mul i32 %a, 36
  %d = getelementptr inbounds i8, ptr addrspace(200) %b, i32 %c
  %e = load i32, ptr addrspace(200) %d
  ret i32 %e
}

define i32 @addmul40(i32 %a, i32 %b) {
; ZCHERIPURECAP-LABEL: addmul40:
; ZCHERIPURECAP:       # %bb.0:
; ZCHERIPURECAP-NEXT:    li a2, 40
; ZCHERIPURECAP-NEXT:    mul a0, a0, a2
; ZCHERIPURECAP-NEXT:    add a0, a0, a1
; ZCHERIPURECAP-NEXT:    ret
;
; ZCHERIPURECAPZBA-LABEL: addmul40:
; ZCHERIPURECAPZBA:       # %bb.0:
; ZCHERIPURECAPZBA-NEXT:    # kill: def $x11 killed $x11 def $c11
; ZCHERIPURECAPZBA-NEXT:    sh2add ca0, a0, ca1
; ZCHERIPURECAPZBA-NEXT:    sh3add ca0, a0, ca1
; ZCHERIPURECAPZBA-NEXT:    # kill: def $x10 killed $x10 killed $c10
; ZCHERIPURECAPZBA-NEXT:    ret
;
; RISCVZBA-LABEL: addmul40:
; RISCVZBA:       # %bb.0:
; RISCVZBA-NEXT:    sh2add a0, a0, a0
; RISCVZBA-NEXT:    sh3add a0, a0, a1
; RISCVZBA-NEXT:    ret
  %c = mul i32 %a, 40
  %d = add i32 %c, %b
  ret i32 %d
}

define i32 @addmul40_ptr(i32 %a, ptr addrspace(200) %b){
; ZCHERIPURECAP-LABEL: addmul40_ptr:
; ZCHERIPURECAP:       # %bb.0:
; ZCHERIPURECAP-NEXT:    li a2, 40
; ZCHERIPURECAP-NEXT:    mul a0, a0, a2
; ZCHERIPURECAP-NEXT:    cadd ca0, ca1, a0
; ZCHERIPURECAP-NEXT:    lw a0, 0(ca0)
; ZCHERIPURECAP-NEXT:    ret
;
; ZCHERIPURECAPZBA-LABEL: addmul40_ptr:
; ZCHERIPURECAPZBA:       # %bb.0:
; ZCHERIPURECAPZBA-NEXT:    # kill: def $x10 killed $x10 def $c10
; ZCHERIPURECAPZBA-NEXT:    sh2add ca0, a0, ca0
; ZCHERIPURECAPZBA-NEXT:    sh3add ca0, a0, ca1
; ZCHERIPURECAPZBA-NEXT:    lw a0, 0(ca0)
; ZCHERIPURECAPZBA-NEXT:    ret
;
; RISCVZBA-LABEL: addmul40_ptr:
; RISCVZBA:       # %bb.0:
; RISCVZBA-NEXT:    sh2add a0, a0, a0
; RISCVZBA-NEXT:    sh3add a0, a0, a1
; RISCVZBA-NEXT:    lw a0, 0(a0)
; RISCVZBA-NEXT:    ret
  %c = mul i32 %a, 40
  %d = getelementptr inbounds i8, ptr addrspace(200) %b, i32 %c
  %e = load i32, ptr addrspace(200) %d
  ret i32 %e
}

define i32 @addmul72(i32 %a, i32 %b) {
; ZCHERIPURECAP-LABEL: addmul72:
; ZCHERIPURECAP:       # %bb.0:
; ZCHERIPURECAP-NEXT:    li a2, 72
; ZCHERIPURECAP-NEXT:    mul a0, a0, a2
; ZCHERIPURECAP-NEXT:    add a0, a0, a1
; ZCHERIPURECAP-NEXT:    ret
;
; ZCHERIPURECAPZBA-LABEL: addmul72:
; ZCHERIPURECAPZBA:       # %bb.0:
; ZCHERIPURECAPZBA-NEXT:    # kill: def $x11 killed $x11 def $c11
; ZCHERIPURECAPZBA-NEXT:    sh3add ca0, a0, ca1
; ZCHERIPURECAPZBA-NEXT:    sh3add ca0, a0, ca1
; ZCHERIPURECAPZBA-NEXT:    # kill: def $x10 killed $x10 killed $c10
; ZCHERIPURECAPZBA-NEXT:    ret
;
; RISCVZBA-LABEL: addmul72:
; RISCVZBA:       # %bb.0:
; RISCVZBA-NEXT:    sh3add a0, a0, a0
; RISCVZBA-NEXT:    sh3add a0, a0, a1
; RISCVZBA-NEXT:    ret
  %c = mul i32 %a, 72
  %d = add i32 %c, %b
  ret i32 %d
}

define i32 @addmul72_ptr(i32 %a, ptr addrspace(200) %b){
; ZCHERIPURECAP-LABEL: addmul72_ptr:
; ZCHERIPURECAP:       # %bb.0:
; ZCHERIPURECAP-NEXT:    li a2, 72
; ZCHERIPURECAP-NEXT:    mul a0, a0, a2
; ZCHERIPURECAP-NEXT:    cadd ca0, ca1, a0
; ZCHERIPURECAP-NEXT:    lw a0, 0(ca0)
; ZCHERIPURECAP-NEXT:    ret
;
; ZCHERIPURECAPZBA-LABEL: addmul72_ptr:
; ZCHERIPURECAPZBA:       # %bb.0:
; ZCHERIPURECAPZBA-NEXT:    # kill: def $x10 killed $x10 def $c10
; ZCHERIPURECAPZBA-NEXT:    sh3add ca0, a0, ca0
; ZCHERIPURECAPZBA-NEXT:    sh3add ca0, a0, ca1
; ZCHERIPURECAPZBA-NEXT:    lw a0, 0(ca0)
; ZCHERIPURECAPZBA-NEXT:    ret
;
; RISCVZBA-LABEL: addmul72_ptr:
; RISCVZBA:       # %bb.0:
; RISCVZBA-NEXT:    sh3add a0, a0, a0
; RISCVZBA-NEXT:    sh3add a0, a0, a1
; RISCVZBA-NEXT:    lw a0, 0(a0)
; RISCVZBA-NEXT:    ret
  %c = mul i32 %a, 72
  %d = getelementptr inbounds i8, ptr addrspace(200) %b, i32 %c
  %e = load i32, ptr addrspace(200) %d
  ret i32 %e
}
