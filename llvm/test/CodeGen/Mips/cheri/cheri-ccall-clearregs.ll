; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: %cheri_llc %s -relocation-model=pic -o - -cheri-use-clearregs | FileCheck %s
; ModuleID = 'call.c'

; Function Attrs: nounwind
define void @a(ptr addrspace(200) %a1, ptr addrspace(200) %a2, i64 %foo, i64 %bar) {
; CHECK-LABEL: a:
; CHECK:       # %bb.0:
; CHECK-NEXT:    daddiu $sp, $sp, -16
; CHECK-NEXT:    .cfi_def_cfa_offset 16
; CHECK-NEXT:    sd $ra, 8($sp) # 8-byte Folded Spill
; CHECK-NEXT:    sd $gp, 0($sp) # 8-byte Folded Spill
; CHECK-NEXT:    .cfi_offset 31, -8
; CHECK-NEXT:    .cfi_offset 28, -16
; CHECK-NEXT:    cmove $c2, $c4
; CHECK-NEXT:    cmove $c1, $c3
; CHECK-NEXT:    lui $1, %hi(%neg(%gp_rel(a)))
; CHECK-NEXT:    daddu $1, $1, $25
; CHECK-NEXT:    daddiu $gp, $1, %lo(%neg(%gp_rel(a)))
; CHECK-NEXT:    ld $25, %call16(b)($gp)
; CHECK-NEXT:    move $2, $4
; CHECK-NEXT:    move $4, $5
; CHECK-NEXT:    cclearlo 2040
; CHECK-NEXT:    jalr $25
; CHECK-NEXT:    clearlo 4064
; CHECK-NEXT:    ld $gp, 0($sp) # 8-byte Folded Reload
; CHECK-NEXT:    ld $ra, 8($sp) # 8-byte Folded Reload
; CHECK-NEXT:    jr $ra
; CHECK-NEXT:    daddiu $sp, $sp, 16
  tail call chericcallcc void @b(ptr addrspace(200) %a1, ptr addrspace(200) %a2, i64 %foo, i64 %bar)
  ret void
}

declare chericcallcc void @b(ptr addrspace(200), ptr addrspace(200), i64, i64)
