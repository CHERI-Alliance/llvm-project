; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: %cheri_purecap_llc -O0 %s -o - | FileCheck %s


; Function Attrs: nounwind
define void @dynamic_alloca(i32 signext %x) local_unnamed_addr #0 {
; CHECK-LABEL: dynamic_alloca:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    cincoffset $c11, $c11, -64
; CHECK-NEXT:    csc $c25, $zero, 48($c11) # 16-byte Folded Spill
; CHECK-NEXT:    csc $c24, $zero, 32($c11) # 16-byte Folded Spill
; CHECK-NEXT:    csc $c17, $zero, 16($c11) # 16-byte Folded Spill
; CHECK-NEXT:    cincoffset $c24, $c11, $zero
; CHECK-NEXT:    cgetaddr $1, $c11
; CHECK-NEXT:    daddiu $2, $zero, -64
; CHECK-NEXT:    and $1, $1, $2
; CHECK-NEXT:    csetaddr $c11, $c11, $1
; CHECK-NEXT:    cincoffset $c25, $c11, $zero
; CHECK-NEXT:    lui $1, %pcrel_hi(_CHERI_CAPABILITY_TABLE_-8)
; CHECK-NEXT:    daddiu $1, $1, %pcrel_lo(_CHERI_CAPABILITY_TABLE_-4)
; CHECK-NEXT:    cgetpccincoffset $c1, $1
; CHECK-NEXT:    # kill: def $at killed $a0
; CHECK-NEXT:    daddiu $3, $zero, 1
; CHECK-NEXT:    dsll $1, $3, 32
; CHECK-NEXT:    daddiu $1, $1, -1
; CHECK-NEXT:    and $1, $4, $1
; CHECK-NEXT:    dsll $1, $1, 2
; CHECK-NEXT:    daddiu $2, $1, 15
; CHECK-NEXT:    dsll $3, $3, 35
; CHECK-NEXT:    daddiu $3, $3, -16
; CHECK-NEXT:    and $4, $2, $3
; CHECK-NEXT:    croundrepresentablelength $2, $4
; CHECK-NEXT:    cmove $c2, $c11
; CHECK-NEXT:    cgetaddr $3, $c2
; CHECK-NEXT:    dsubu $3, $3, $2
; CHECK-NEXT:    crepresentablealignmentmask $4, $4
; CHECK-NEXT:    and $3, $3, $4
; CHECK-NEXT:    csetaddr $c3, $c2, $3
; CHECK-NEXT:    csetbounds $c2, $c3, $2
; CHECK-NEXT:    cmove $c11, $c3
; CHECK-NEXT:    csetbounds $c3, $c2, $1
; CHECK-NEXT:    clcbi $c12, %capcall20(use_arg)($c1)
; CHECK-NEXT:    cjalr $c12, $c17
; CHECK-NEXT:    nop
; CHECK-NEXT:    cincoffset $c11, $c24, $zero
; CHECK-NEXT:    clc $c17, $zero, 16($c11) # 16-byte Folded Reload
; CHECK-NEXT:    clc $c24, $zero, 32($c11) # 16-byte Folded Reload
; CHECK-NEXT:    clc $c25, $zero, 48($c11) # 16-byte Folded Reload
; CHECK-NEXT:    cincoffset $c11, $c11, 64
; CHECK-NEXT:    cjr $c17
; CHECK-NEXT:    nop
entry:
  %0 = zext i32 %x to i64
  %vla = alloca i32, i64 %0, align 64, addrspace(200)
  call void @use_arg(ptr addrspace(200) nonnull %vla) #0
  ret void
}

; Function Attrs: nounwind
declare void @use_arg(ptr addrspace(200)) #0

attributes #0 = { nounwind }
