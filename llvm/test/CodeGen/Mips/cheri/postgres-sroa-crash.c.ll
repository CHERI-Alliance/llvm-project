; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: %cheri_opt -passes=sroa -S %s -o - | FileCheck %s

%struct.e = type { %union.a }
%union.a = type { double }

; function attrs: noinline nounwind
define void @f() {
; CHECK-LABEL: @f(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[G_SROA_0:%.*]] = alloca double, align 8
; CHECK-NEXT:    [[G_SROA_0_0_G_SROA_0_0_:%.*]] = load double, ptr [[G_SROA_0]], align 8
; CHECK-NEXT:    call void @dostuff_double(double [[G_SROA_0_0_G_SROA_0_0_]])
; CHECK-NEXT:    [[G_SROA_0_0_G_SROA_0_0_1:%.*]] = load ptr, ptr [[G_SROA_0]], align 8
; CHECK-NEXT:    call void @dostuff_charptr(ptr [[G_SROA_0_0_G_SROA_0_0_1]])
; CHECK-NEXT:    ret void
;
entry:
  %g = alloca %struct.e, align 8
  %0 = load double, ptr %g, align 8
  call void @dostuff_double(double %0)
  %1 = load ptr, ptr %g, align 8
  call void @dostuff_charptr(ptr %1)
  ret void
}

declare void @dostuff_double(double)

declare void @dostuff_charptr(ptr)
