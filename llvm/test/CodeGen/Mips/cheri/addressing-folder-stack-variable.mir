# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: %cheri_purecap_llc -cheri-cap-table-abi=pcrel %s -verify-machineinstrs -run-pass=cheriaddrmodefolder  -o - | FileCheck %s
--- |
  ; ModuleID = 'llvm/test/CodeGen/Mips/cheri/address-folder-stack-variable.opaque.ll'
  source_filename = "/Users/alex/cheri/llvm/test/CodeGen/Mips/cheri/addressing-folder-crash.ll"
  target datalayout = "E-m:e-pf200:128:128:128:64-i8:8:32-i16:16:32-i64:64-n32:64-S128-A200-P200-G200"
  target triple = "cheri-unknown-freebsd"

  $_ZN3JSC8WeakImpl7jsValueEv = comdat any

  ; Function Attrs: nounwind
  define hidden void @_ZN3JSC8WeakImpl7jsValueEv(ptr addrspace(200) %this) addrspace(200) #0 comdat align 2 {
  entry:
    %this.addr = alloca ptr addrspace(200), align 16, addrspace(200)
    %0 = bitcast ptr addrspace(200) %this.addr to ptr addrspace(200)
    %1 = call ptr addrspace(200) @llvm.mips.stack.to.cap(ptr addrspace(200) %0)
    %2 = bitcast ptr addrspace(200) %1 to ptr addrspace(200)
    store ptr addrspace(200) %this, ptr addrspace(200) %2, align 16
    ret void
  }

  ; Function Attrs: nounwind willreturn memory(none)
  declare ptr addrspace(200) @llvm.cheri.cap.bounds.set.i64(ptr addrspace(200), i64) addrspace(200) #1

  ; Function Attrs: nounwind memory(none)
  declare ptr addrspace(200) @llvm.mips.stack.to.cap(ptr addrspace(200)) addrspace(200) #2

  ; Function Attrs: nocallback nofree nosync nounwind willreturn
  declare void @llvm.stackprotector.p0(ptr, ptr) addrspace(200) #3

  attributes #0 = { nounwind }
  attributes #1 = { nounwind willreturn memory(none) }
  attributes #2 = { nounwind memory(none) }
  attributes #3 = { nocallback nofree nosync nounwind willreturn }

...
---
name:            _ZN3JSC8WeakImpl7jsValueEv
alignment:       8
exposesReturnsTwice: false
legalized:       false
regBankSelected: false
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
registers:
  - { id: 0, class: cherigpr, preferred-register: '' }
  - { id: 1, class: cherigpr, preferred-register: '' }
liveins:
  - { reg: '$c3', virtual-reg: '%0' }
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    16
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:
  - { id: 0, name: this.addr, type: default, offset: 0, size: 16, alignment: 16,
      stack-id: default, callee-saved-register: '', callee-saved-restored: true,
      debug-info-variable: '', debug-info-expression: '', debug-info-location: '' }
constants:       []
body:             |
  bb.0.entry:
    liveins: $c3

    ; Do not change frame indexes:
    ; CHECK-LABEL: name: _ZN3JSC8WeakImpl7jsValueEv
    ; CHECK: liveins: $c3
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:cherigpr = COPY $c3
    ; CHECK-NEXT: [[CIncOffset:%[0-9]+]]:cherigpr = CIncOffset %stack.0.this.addr, $zero_64
    ; CHECK-NEXT: STORECAP [[COPY]], $zero_64, 0, killed [[CIncOffset]] :: (store (s128) into %ir.2, addrspace 200)
    ; CHECK-NEXT: CapRetPseudo
    %0:cherigpr = COPY $c3
    %1:cherigpr = CIncOffset %stack.0.this.addr, $zero_64
    STORECAP %0, $zero_64, 0, killed %1 :: (store (s128) into %ir.2, addrspace 200)
    CapRetPseudo

...

