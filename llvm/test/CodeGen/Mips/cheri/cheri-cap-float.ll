; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: %cheri_llc %s -o - | FileCheck %s

; Function Attrs: nounwind memory(read)
define double @load64(ptr addrspace(200) nocapture readonly %x) #0 {
; CHECK-LABEL: load64:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    cld $1, $zero, 0($c3)
; CHECK-NEXT:    jr $ra
; CHECK-NEXT:    dmtc1 $1, $f0
entry:
  %0 = load double, ptr addrspace(200) %x, align 8
  ret double %0
}

; Function Attrs: nounwind memory(read)
define float @load32(ptr addrspace(200) nocapture readonly %x) #0 {
; CHECK-LABEL: load32:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    clw $1, $zero, 0($c3)
; CHECK-NEXT:    jr $ra
; CHECK-NEXT:    mtc1 $1, $f0
entry:
  %0 = load float, ptr addrspace(200) %x, align 4
  ret float %0
}

; Function Attrs: nounwind
define void @store64(ptr addrspace(200) nocapture %x, double %y) #1 {
; CHECK-LABEL: store64:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    dmfc1 $1, $f12
; CHECK-NEXT:    jr $ra
; CHECK-NEXT:    csd $1, $zero, 0($c3)
entry:
  store double %y, ptr addrspace(200) %x, align 8
  ret void
}

; Function Attrs: nounwind
define void @store32(ptr addrspace(200) nocapture %x, float %y) #1 {
; CHECK-LABEL: store32:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    mfc1 $1, $f12
; CHECK-NEXT:    jr $ra
; CHECK-NEXT:    csw $1, $zero, 0($c3)
entry:
  store float %y, ptr addrspace(200) %x, align 4
  ret void
}

attributes #0 = { nounwind memory(read) "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"clang version 3.4 "}
