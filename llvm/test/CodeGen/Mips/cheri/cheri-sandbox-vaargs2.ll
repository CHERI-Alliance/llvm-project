; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: %cheri128_purecap_llc -cheri-cap-table-abi=pcrel -O2 -o - %s | %cheri_FileCheck %s -check-prefixes PCREL
; ModuleID = 'libxo.i'

%struct.xo_handle_s = type { ptr addrspace(200) }

@b = common addrspace(200) global %struct.xo_handle_s zeroinitializer, align 32

; Function Attrs: nounwind
define void @xo_emit(ptr addrspace(200) %fmt, ...) addrspace(200) #0 {
; PCREL-LABEL: xo_emit:
; PCREL:       # %bb.0: # %entry
; PCREL-NEXT:    cincoffset $c11, $c11, -96
; PCREL-NEXT:    csc $c24, $zero, 80($c11) # 16-byte Folded Spill
; PCREL-NEXT:    csc $c17, $zero, 64($c11) # 16-byte Folded Spill
; PCREL-NEXT:    cincoffset $c24, $c11, $zero
; PCREL-NEXT:    cgetaddr $1, $c11
; PCREL-NEXT:    daddiu $2, $zero, -32
; PCREL-NEXT:    and $1, $1, $2
; PCREL-NEXT:    csetaddr $c11, $c11, $1
; PCREL-NEXT:    lui $1, %pcrel_hi(_CHERI_CAPABILITY_TABLE_-8)
; PCREL-NEXT:    daddiu $1, $1, %pcrel_lo(_CHERI_CAPABILITY_TABLE_-4)
; PCREL-NEXT:    cgetpccincoffset $c1, $1
; PCREL-NEXT:    clcbi $c1, %captab20(b)($c1)
; PCREL-NEXT:    csc $c3, $zero, 32($c11)
; PCREL-NEXT:    csc $c1, $zero, 0($c11)
; PCREL-NEXT:    csc $c13, $zero, 0($c1)
; PCREL-NEXT:    cgetnull $c13
; PCREL-NEXT:    cincoffset $c11, $c24, $zero
; PCREL-NEXT:    clc $c17, $zero, 64($c11) # 16-byte Folded Reload
; PCREL-NEXT:    clc $c24, $zero, 80($c11) # 16-byte Folded Reload
; PCREL-NEXT:    cjr $c17
; PCREL-NEXT:    cincoffset $c11, $c11, 96
entry:
  %fmt.addr = alloca ptr addrspace(200), align 32, addrspace(200)
  %c = alloca ptr addrspace(200), align 32, addrspace(200)
  store ptr addrspace(200) %fmt, ptr addrspace(200) %fmt.addr, align 32
  store ptr addrspace(200) @b, ptr addrspace(200) %c, align 32
  %0 = load ptr addrspace(200), ptr addrspace(200) %c, align 32
  %xo_vap = getelementptr inbounds %struct.xo_handle_s, ptr addrspace(200) %0, i32 0, i32 0
  %xo_vap1 = bitcast ptr addrspace(200) %xo_vap to ptr addrspace(200)
  call void @llvm.va_start.p200(ptr addrspace(200) %xo_vap1)
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind willreturn
declare void @llvm.va_start.p200(ptr addrspace(200)) addrspace(200) #1

attributes #0 = { nounwind }
attributes #1 = { nocallback nofree nosync nounwind willreturn }
