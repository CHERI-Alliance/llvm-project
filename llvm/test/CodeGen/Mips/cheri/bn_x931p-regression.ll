; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; After the C13 == NULL optimization openssl/crypto/bn/bn_x931p.c was failing.
; Check that it works as expected
; RUN: %cheri_purecap_llc -verify-machineinstrs -o - %s -cheri-cap-table-abi=pcrel | %cheri_FileCheck %s -check-prefix PCREL

declare i32 @b() addrspace(200)

define i32 @a(ptr addrspace(200) %0, ptr addrspace(200) %1, ptr addrspace(200) %2,
              ptr addrspace(200) %3, ptr addrspace(200) %4, ptr addrspace(200) %5,
              ptr addrspace(200) %6, ptr addrspace(200) %7, ptr addrspace(200) %8) addrspace(200) {
; PCREL-LABEL: a:
; PCREL:       # %bb.0:
; PCREL-NEXT:    cincoffset $c11, $c11, -[[#STACKFRAME_SIZE:]]
; PCREL-NEXT:    .cfi_def_cfa_offset [[#STACKFRAME_SIZE]]
; PCREL-NEXT:    csc $c17, $zero, 0($c11)
; PCREL-NEXT:    .cfi_offset 89, -[[#STACKFRAME_SIZE]]
; PCREL-NEXT:    lui $1, %pcrel_hi(_CHERI_CAPABILITY_TABLE_-8)
; PCREL-NEXT:    daddiu $1, $1, %pcrel_lo(_CHERI_CAPABILITY_TABLE_-4)
; PCREL-NEXT:    cgetpccincoffset $c1, $1
; PCREL-NEXT:    clcbi $c12, %capcall20(b)($c1)
; PCREL-NEXT:    cjalr $c12, $c17
; PCREL-NEXT:    cgetnull $c13
; PCREL-NEXT:    cgetnull $c13
; PCREL-NEXT:    clc $c17, $zero, 0($c11)
; PCREL-NEXT:    cjr $c17
; PCREL-NEXT:    cincoffset $c11, $c11, [[#STACKFRAME_SIZE]]
  %ret = call i32 @b()
  ret i32 %ret
}

