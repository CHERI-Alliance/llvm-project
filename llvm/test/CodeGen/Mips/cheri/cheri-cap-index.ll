; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: %cheri_llc -verify-machineinstrs %s -o - | FileCheck %s

; Function Attrs: nounwind
define i32 @loop(ptr addrspace(200) nocapture %x, i32 %len) #0 {
; CHECK-LABEL: loop:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    sll $3, $4, 0
; CHECK-NEXT:    blez $3, .LBB0_4
; CHECK-NEXT:    nop
; CHECK-NEXT:  # %bb.1: # %for.body.preheader
; CHECK-NEXT:    addiu $4, $zero, 0
; CHECK-NEXT:    addiu $2, $zero, 0
; CHECK-NEXT:  .LBB0_2: # %for.body
; CHECK-NEXT:    # =>This Inner Loop Header: Depth=1
; CHECK-NEXT:    sll $1, $4, 0
; CHECK-NEXT:    dsll $1, $1, 2
; CHECK-NEXT:    clw $5, $1, 0($c3)
; CHECK-NEXT:    addu $2, $5, $2
; CHECK-NEXT:    addiu $4, $4, 1
; CHECK-NEXT:    bne $3, $4, .LBB0_2
; CHECK-NEXT:    csw $2, $1, 0($c3)
; CHECK-NEXT:  # %bb.3: # %for.end
; CHECK-NEXT:    jr $ra
; CHECK-NEXT:    nop
; CHECK-NEXT:  .LBB0_4:
; CHECK-NEXT:    jr $ra
; CHECK-NEXT:    addiu $2, $zero, 0
entry:
  %cmp9 = icmp sgt i32 %len, 0
  br i1 %cmp9, label %for.body, label %for.end

for.body:                                         ; preds = %for.body, %entry
  %i.011 = phi i32 [ %inc, %for.body ], [ 0, %entry ]
  %sum.010 = phi i32 [ %add, %for.body ], [ 0, %entry ]
  %0 = sext i32 %i.011 to i256
  %arrayidx = getelementptr inbounds i32, ptr addrspace(200) %x, i256 %0
  %1 = load i32, ptr addrspace(200) %arrayidx, align 4
  %add = add nsw i32 %1, %sum.010
  store i32 %add, ptr addrspace(200) %arrayidx, align 4
  %inc = add nsw i32 %i.011, 1
  %exitcond = icmp eq i32 %inc, %len
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %entry
  %sum.0.lcssa = phi i32 [ 0, %entry ], [ %add, %for.body ]
  ret i32 %sum.0.lcssa
}

attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf"="true" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "unsafe-fp-math"="false" "use-soft-float"="false" }
