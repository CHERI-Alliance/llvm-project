# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
## Another machine verifier error found compiling libc
# RUN: %cheri_purecap_llc -run-pass=cheriaddrmodefolder -verify-machineinstrs -o - %s | FileCheck %s
--- |
  ; ModuleID = '/Users/alex/cheri/llvm-project/llvm/test/CodeGen/Mips/cheri/_addrfolder-err.c-reduce.test.ll'
  source_filename = "/tmp/bt_conv-b393d3.c"
  target datalayout = "E-m:e-pf200:128:128:128:64-i8:8:32-i16:16:32-i64:64-n32:64-S128-A200-P200-G200"
  target triple = "cheri-unknown-freebsd"

  module asm ".ident\09\22$FreeBSD$\22"

  ; Function Attrs: noreturn nounwind
  define void @__bt_pgout(ptr addrspace(200) nocapture %pp) local_unnamed_addr addrspace(200) #0 {
  entry:
    %0 = load i16, ptr addrspace(200) inttoptr (i64 20 to ptr addrspace(200)), align 2
    %idx.ext = zext i16 %0 to i64
    %add.ptr = getelementptr inbounds i8, ptr addrspace(200) %pp, i64 %idx.ext
    store i8 0, ptr addrspace(200) %add.ptr, align 1
    %add.ptr33 = getelementptr inbounds i8, ptr addrspace(200) %add.ptr, i64 4
    %1 = load i8, ptr addrspace(200) %add.ptr33, align 1
    %2 = and i8 %1, 2
    %tobool36 = icmp eq i8 %2, 0
    br i1 %tobool36, label %if.end58, label %if.then37

  if.then37:                                        ; preds = %entry
    %sunkaddr = getelementptr inbounds i8, ptr addrspace(200) %pp, i64 %idx.ext
    %sunkaddr5 = getelementptr inbounds i8, ptr addrspace(200) %sunkaddr, i64 5
    %3 = bitcast ptr addrspace(200) %sunkaddr5 to ptr addrspace(200)
    %4 = load i32, ptr addrspace(200) %3, align 4
    %_tmp49.sroa.0.0.extract.shift = lshr i32 %4, 24
    %_tmp49.sroa.0.0.extract.trunc = trunc i32 %_tmp49.sroa.0.0.extract.shift to i8
    store i8 %_tmp49.sroa.0.0.extract.trunc, ptr addrspace(200) inttoptr (i64 3 to ptr addrspace(200)), align 1
    br label %if.end58

  if.end58:                                         ; preds = %if.then37, %entry
    tail call void @llvm.trap()
    unreachable
  }

  ; Function Attrs: cold noreturn nounwind
  declare void @llvm.trap() addrspace(200) #1

  ; Function Attrs: nocallback nofree nosync nounwind willreturn
  declare void @llvm.stackprotector.p0(ptr, ptr) addrspace(200) #2

  attributes #0 = { noreturn nounwind "target-cpu"="cheri128" "target-features"="+cheri128" "use-soft-float"="true" }
  attributes #1 = { cold noreturn nounwind "target-cpu"="cheri128" "target-features"="+cheri128" }
  attributes #2 = { nocallback nofree nosync nounwind willreturn "target-cpu"="cheri128" "target-features"="+cheri128" }

  !llvm.ident = !{!0}

  !0 = !{!"clang version 10.0.0 (https://github.com/CTSRD-CHERI/llvm-project 6ec41c653f1255484f2466872e65ced5f7b9991c)"}

...
---
name:            __bt_pgout
alignment:       8
exposesReturnsTwice: false
legalized:       false
regBankSelected: false
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
callsEHReturn:   false
callsUnwindInit: false
hasEHCatchret:   false
hasEHScopes:     false
hasEHFunclets:   false
debugInstrRef:   false
failsVerification: false
tracksDebugUserValues: false
registers:
  - { id: 0, class: gpr64, preferred-register: '' }
  - { id: 1, class: cherigpr, preferred-register: '' }
  - { id: 2, class: cherigpr, preferred-register: '' }
  - { id: 3, class: cherigpr, preferred-register: '' }
  - { id: 4, class: gpr64, preferred-register: '' }
  - { id: 5, class: cherigpr, preferred-register: '' }
  - { id: 6, class: gpr32, preferred-register: '' }
  - { id: 7, class: gpr32, preferred-register: '' }
  - { id: 8, class: cherigpr, preferred-register: '' }
  - { id: 9, class: cherigpr, preferred-register: '' }
  - { id: 10, class: gpr64, preferred-register: '' }
  - { id: 11, class: cherigpr, preferred-register: '' }
liveins:
  - { reg: '$c3', virtual-reg: '%1' }
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  functionContext: ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  hasTailCall:     false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
debugValueSubstitutions: []
constants:       []
machineFunctionInfo: {}
body:             |
  ; CHECK-LABEL: name: __bt_pgout
  ; CHECK: bb.0.entry:
  ; CHECK-NEXT:   successors: %bb.2(0x40000000), %bb.1(0x40000000)
  ; CHECK-NEXT:   liveins: $c3
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   [[COPY:%[0-9]+]]:cherigpr = COPY $c3
  ; CHECK-NEXT:   [[CIncOffsetImm:%[0-9]+]]:cherigpr = CIncOffsetImm $cnull, 20
  ; CHECK-NEXT:   [[CAPLOADU16_:%[0-9]+]]:gpr64 = CAPLOADU16 $zero_64, 0, killed [[CIncOffsetImm]] :: (load (s16) from `ptr addrspace(200) inttoptr (i64 20 to ptr addrspace(200))`, addrspace 200)
  ; CHECK-NEXT:   [[CIncOffset:%[0-9]+]]:cherigpr = CIncOffset [[COPY]], [[CAPLOADU16_]]
  ; CHECK-NEXT:   CAPSTORE8 killed $zero_64, [[CAPLOADU16_]], 0, killed [[COPY]] :: (store (s8) into %ir.add.ptr, addrspace 200)
  ; CHECK-NEXT:   [[CAPLOADU832_:%[0-9]+]]:gpr32 = CAPLOADU832 $zero_64, 4, [[CIncOffset]] :: (load (s8) from %ir.add.ptr33, addrspace 200)
  ; CHECK-NEXT:   [[ANDi:%[0-9]+]]:gpr32 = ANDi killed [[CAPLOADU832_]], 2
  ; CHECK-NEXT:   BEQ killed [[ANDi]], $zero, %bb.2, implicit-def dead $at
  ; CHECK-NEXT:   B %bb.1, implicit-def dead $at
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.1.if.then37:
  ; CHECK-NEXT:   successors: %bb.2(0x80000000)
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   [[CAPLOADU8_:%[0-9]+]]:gpr64 = CAPLOADU8 $zero_64, 5, [[CIncOffset]] :: (load (s8) from %ir.3, align 4, addrspace 200)
  ; CHECK-NEXT:   [[CIncOffsetImm1:%[0-9]+]]:cherigpr = CIncOffsetImm $cnull, 3
  ; CHECK-NEXT:   CAPSTORE8 killed [[CAPLOADU8_]], $zero_64, 0, killed [[CIncOffsetImm1]] :: (store (s8) into `ptr addrspace(200) inttoptr (i64 3 to ptr addrspace(200))`, addrspace 200)
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.2.if.end58:
  ; CHECK-NEXT:   TRAP
  bb.0.entry:
    successors: %bb.2(0x40000000), %bb.1(0x40000000)
    liveins: $c3

    %1:cherigpr = COPY $c3
    %2:cherigpr = CIncOffsetImm $cnull, 20
    %0:gpr64 = CAPLOADU16 $zero_64, 0, killed %2 :: (load (s16) from `ptr addrspace(200) inttoptr (i64 20 to ptr addrspace(200))`, addrspace 200)
    %3:cherigpr = CIncOffset %1, %0
    CAPSTORE8 killed $zero_64, $zero_64, 0, %3 :: (store (s8) into %ir.add.ptr, addrspace 200)
    %5:cherigpr = CIncOffsetImm %3, 4
    %6:gpr32 = CAPLOADU832 $zero_64, 0, killed %5 :: (load (s8) from %ir.add.ptr33, addrspace 200)
    %7:gpr32 = ANDi killed %6, 2
    BEQ killed %7, $zero, %bb.2, implicit-def dead $at
    B %bb.1, implicit-def dead $at

  bb.1.if.then37:
    successors: %bb.2(0x80000000)

    %9:cherigpr = CIncOffsetImm %3, 5
    %10:gpr64 = CAPLOADU8 $zero_64, 0, killed %9 :: (load (s8) from %ir.3, align 4, addrspace 200)
    %11:cherigpr = CIncOffsetImm $cnull, 3
    CAPSTORE8 killed %10, $zero_64, 0, killed %11 :: (store (s8) into `ptr addrspace(200) inttoptr (i64 3 to ptr addrspace(200))`, addrspace 200)

  bb.2.if.end58:
    TRAP

...
